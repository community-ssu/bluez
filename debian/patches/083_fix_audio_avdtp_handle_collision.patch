author	Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
commit	ee89674c0bc3ab7338046d799e8b15c7473628ad
	Fri, 15 Jun 2012 14:47:53 +0000 (17:47 +0300)

audio: Add handling of AVDTP command collision

Check collision for AVDTP Open, Close, Start, Suspend and Abort commands
and if they collided remove the pending request if SEP has accepted the
indication.

diff -cr bluez-4.99.pan.orig/audio/avdtp.c bluez-4.99.pan/audio/avdtp.c
*** bluez-4.99.pan.orig/audio/avdtp.c	Mon Oct 15 05:11:46 2012
--- bluez-4.99.pan/audio/avdtp.c	Mon Oct 15 10:48:37 2012
***************
*** 314,319 ****
--- 314,320 ----
  	size_t data_size;
  	struct avdtp_stream *stream; /* Set if the request targeted a stream */
  	guint timeout;
+ 	gboolean collided;
  };
  
  struct avdtp_remote_sep {
***************
*** 1643,1648 ****
--- 1644,1712 ----
  					AVDTP_RECONFIGURE, &rej, sizeof(rej));
  }
  
+ static void check_seid_collision(struct pending_req *req, uint8_t id)
+ {
+ 	struct seid_req *seid = req->data;
+ 
+ 	if (seid->acp_seid == id)
+ 		req->collided = TRUE;
+ }
+ 
+ static void check_start_collision(struct pending_req *req, uint8_t id)
+ {
+ 	struct start_req *start = req->data;
+ 	struct seid *seid = &start->first_seid;
+ 	int count = 1 + req->data_size - sizeof(struct start_req);
+ 	int i;
+ 
+ 	for (i = 0; i < count; i++, seid++) {
+ 		if (seid->seid == id) {
+ 			req->collided = TRUE;
+ 			return;
+ 		}
+ 	}
+ }
+ 
+ static void check_suspend_collision(struct pending_req *req, uint8_t id)
+ {
+ 	struct suspend_req *suspend = req->data;
+ 	struct seid *seid = &suspend->first_seid;
+ 	int count = 1 + req->data_size - sizeof(struct suspend_req);
+ 	int i;
+ 
+ 	for (i = 0; i < count; i++, seid++) {
+ 		if (seid->seid == id) {
+ 			req->collided = TRUE;
+ 			return;
+ 		}
+ 	}
+ }
+ 
+ static void avdtp_check_collision(struct avdtp *session, uint8_t cmd,
+ 					struct avdtp_stream *stream)
+ {
+ 	struct pending_req *req = session->req;
+ 
+ 	if (req == NULL || (req->signal_id != cmd && cmd != AVDTP_ABORT))
+ 		return;
+ 
+ 	if (cmd == AVDTP_ABORT)
+ 		cmd = req->signal_id;
+ 
+ 	switch (cmd) {
+ 	case AVDTP_OPEN:
+ 	case AVDTP_CLOSE:
+ 		check_seid_collision(req, stream->rseid);
+ 		break;
+ 	case AVDTP_START:
+ 		check_start_collision(req, stream->rseid);
+ 		break;
+ 	case AVDTP_SUSPEND:
+ 		check_suspend_collision(req, stream->rseid);
+ 		break;
+ 	}
+ }
+ 
  static gboolean avdtp_open_cmd(struct avdtp *session, uint8_t transaction,
  				struct seid_req *req, unsigned int size)
  {
***************
*** 1674,1679 ****
--- 1738,1745 ----
  			goto failed;
  	}
  
+ 	avdtp_check_collision(session, AVDTP_OPEN, stream);
+ 
  	if (!avdtp_send(session, transaction, AVDTP_MSG_TYPE_ACCEPT,
  						AVDTP_OPEN, NULL, 0))
  		return FALSE;
***************
*** 1736,1741 ****
--- 1802,1809 ----
  				goto failed;
  		}
  
+ 		avdtp_check_collision(session, AVDTP_START, stream);
+ 
  		avdtp_sep_set_state(session, sep, AVDTP_STATE_STREAMING);
  	}
  
***************
*** 1783,1788 ****
--- 1851,1858 ----
  			goto failed;
  	}
  
+ 	avdtp_check_collision(session, AVDTP_CLOSE, stream);
+ 
  	avdtp_sep_set_state(session, sep, AVDTP_STATE_CLOSING);
  
  	if (!avdtp_send(session, transaction, AVDTP_MSG_TYPE_ACCEPT,
***************
*** 1842,1847 ****
--- 1912,1919 ----
  				goto failed;
  		}
  
+ 		avdtp_check_collision(session, AVDTP_SUSPEND, stream);
+ 
  		avdtp_sep_set_state(session, sep, AVDTP_STATE_OPEN);
  	}
  
***************
*** 1880,1885 ****
--- 1952,1959 ----
  			goto failed;
  	}
  
+ 	avdtp_check_collision(session, AVDTP_ABORT, sep->stream);
+ 
  	ret = avdtp_send(session, transaction, AVDTP_MSG_TYPE_ACCEPT,
  						AVDTP_ABORT, NULL, 0);
  	if (ret)
***************
*** 2172,2177 ****
--- 2246,2256 ----
  		if (session->streams && session->dc_timer)
  			remove_disconnect_timer(session);
  
+ 		if (session->req && session->req->collided) {
+ 			DBG("Collision detected");
+ 			goto next;
+ 		}
+ 
  		return TRUE;
  	}
  
***************
*** 2222,2227 ****
--- 2301,2307 ----
  		break;
  	}
  
+ next:
  	pending_req_free(session->req);
  	session->req = NULL;
  
