author	Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
commit	34d9bd7dd27281cae1d2f9325947241e31819f18
	Fri, 15 Jun 2012 14:50:01 +0000 (17:50 +0300)

audio: Wait remote side to send AVDTP_START when acting as acceptor

Some devices like Sony Ericsson MW600 reject AVDTP_START if it was the
initiator of the connection, apparently it follows recommendation 12 of
simultaneous use of HFP, A2DP and AVRCP profiles white paper which says:

  "If the RD has configured and opened a stream it is also responsible to
  start the streaming via GAVDP_START."

If the client is fast enough and try to acquire the transport this cause
an error, so instead of sending AVDTP_START the code now checks if it is
the acceptor of the stream and wait the remote side to send the command.

diff -cr bluez-4.99.pan.orig/audio/avdtp.c bluez-4.99.pan/audio/avdtp.c
*** bluez-4.99.pan.orig/audio/avdtp.c	Mon Oct 15 11:12:42 2012
--- bluez-4.99.pan/audio/avdtp.c	Tue Oct 16 08:06:37 2012
***************
*** 1068,1079 ****
  		break;
  	case AVDTP_STATE_OPEN:
  		stream->starting = FALSE;
! 		if (old_state > AVDTP_STATE_OPEN && session->auto_dc)
  			stream->idle_timer = g_timeout_add_seconds(STREAM_TIMEOUT,
  								stream_timeout,
  								stream);
  		break;
  	case AVDTP_STATE_STREAMING:
  	case AVDTP_STATE_CLOSING:
  	case AVDTP_STATE_ABORTING:
  		if (stream->idle_timer) {
--- 1068,1086 ----
  		break;
  	case AVDTP_STATE_OPEN:
  		stream->starting = FALSE;
! 		if ((old_state > AVDTP_STATE_OPEN && session->auto_dc) ||
! 							stream->open_acp)
  			stream->idle_timer = g_timeout_add_seconds(STREAM_TIMEOUT,
  								stream_timeout,
  								stream);
  		break;
  	case AVDTP_STATE_STREAMING:
+ 		if (stream->idle_timer) {
+ 			g_source_remove(stream->idle_timer);
+ 			stream->idle_timer = 0;
+ 		}
+ 		stream->open_acp = FALSE;
+ 		break;
  	case AVDTP_STATE_CLOSING:
  	case AVDTP_STATE_ABORTING:
  		if (stream->idle_timer) {
***************
*** 3660,3665 ****
--- 3667,3681 ----
  	if (stream->lsep->state != AVDTP_STATE_OPEN)
  		return -EINVAL;
  
+ 	/* Recommendation 12:
+ 	 * If the RD has configured and opened a stream it is also responsible
+ 	 * to start the streaming via GAVDP_START.
+ 	 */
+ 	if (stream->open_acp) {
+ 		stream->starting = TRUE;
+ 		return 0;
+ 	}
+ 
  	if (stream->close_int == TRUE) {
  		error("avdtp_start: rejecting start since close is initiated");
  		return -EINVAL;
